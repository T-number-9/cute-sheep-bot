import sqlite3
from telegram.ext import Application, MessageHandler, filters, CommandHandler, CallbackQueryHandler
from aiogram import Bot
from config import *
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from datetime import time, datetime, timedelta

bot = Bot(token=TOKEN, parse_mode='HTML')
conn = sqlite3.connect('sheeps.db')  # —Å–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
cursor = conn.cursor()


def db_check(user_id):  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    return cursor.execute('SELECT level, money, diamonds, food, cut, walk, user_name, timer, end_timer, power,'
                          ' cut_uncut'
                          ' FROM users WHERE user_id = ?', (user_id,)).fetchall()[0]


def db_check_bag(user_id):  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    return cursor.execute('SELECT wool FROM items WHERE user_id = ?', (user_id,)).fetchall()[0]


def delta_time(update):  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
    query = update.callback_query
    end = db_check(query.message.chat_id)[8]  # –ø–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
    delta_t = datetime(year=int(end[:4]), month=int(end[5:7]), day=int(end[8:10]), hour=int(end[11:13]),
                       minute=int(end[14:16]), second=int(end[17:19])) - datetime.now()  # —Å—á–∏—Ç–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏

    if str(delta_t)[0] == '-':  # –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        cursor.execute(f'UPDATE users SET cut = "–ü–æ–¥—Å—Ç—Ä–∏—á—å", cut_uncut = True, end_timer = 0 WHERE user_id = ?',
                       (query.message.chat_id,))
        conn.commit()
        return True
    else:  # –∏–Ω–∞—á–µ –≤–≤–æ–¥–∏–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è
        cursor.execute(f'UPDATE users SET cut = ? WHERE user_id = ?', (str(delta_t), query.message.chat_id,))
        conn.commit()
        return False


def delta_time_for_sheep(update):  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
    end = db_check(update.message.chat_id)[8]
    delta_t = datetime(year=int(end[:4]), month=int(end[5:7]), day=int(end[8:10]), hour=int(end[11:13]),
                       minute=int(end[14:16]), second=int(end[17:19])) - datetime.now()

    if str(delta_t)[0] == '-':  # –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        cursor.execute(f'UPDATE users SET cut = "–ü–æ–¥—Å—Ç—Ä–∏—á—å", cut_uncut = True, end_timer = 0 WHERE user_id = ?',
                       (update.message.chat_id,))
        conn.commit()
        return True
    else:  # –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è
        cursor.execute(f'UPDATE users SET cut = ? WHERE user_id = ?', (str(delta_t), update.message.chat_id,))
        conn.commit()
        return False


async def button(update, context):
    query = update.callback_query
    user_id = query.message.chat_id
    context.user_data['message_id'] = query.message.message_id

    if 'need' in query.data:
        if query.data == 'need_cut':
            t = db_check(query.message.chat_id)  # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ

            if t[10]:  # –µ—Å–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç—Ä–∏—á—å
                end_time = datetime.now() + timedelta(minutes=t[7])  # —Å—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
                delta_t = end_time - datetime.now()  # –≤—ã—Å—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è –¥–æ –∫–æ–Ω—Ü–∞ —Ç–∞–π–º–µ—Ä–∞

                # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ç–∞–π–º–µ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                cursor.execute('UPDATE users SET end_timer = ?, cut_uncut = False, cut = ? WHERE user_id = ?',
                               (str(end_time), str(delta_t)[:4], query.message.chat_id))
                conn.commit()

                user_info = db_check(query.message.chat_id)  # –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

                cursor.execute('UPDATE items SET wool = wool + ? WHERE user_id = ?', (user_info[9], user_id,))
                conn.commit()

                # –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫–µ
                sheep_keyboard = [[InlineKeyboardButton(f'‚è± {user_info[4][:1]} —á. {user_info[4][2:4]} –º.',
                                                        callback_data='need_cut')],
                                  [InlineKeyboardButton('üéí', callback_data='need_bag'),
                                   InlineKeyboardButton("üå±", callback_data='need_food')],
                                  [InlineKeyboardButton('üë®‚Äçüåæ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏', callback_data='need_info')]]

                markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

                await context.bot.edit_message_reply_markup(chat_id=user_id, message_id=context.user_data['message_id'],
                                                            reply_markup=markup)
                await bot.answer_callback_query(query.id, f'üß∂ +{user_info[9]} —à–µ—Ä—Å—Ç–∏')
            else:
                user_info1 = db_check(query.message.chat_id)
                if not delta_time(update):
                    user_info = db_check(query.message.chat_id)  # –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

                    if user_info[4][:1] == user_info1[4][:1] and user_info[4][2:4] == user_info1[4][2:4]:
                        await bot.answer_callback_query(query.id, '‚è± –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å')

                    else:
                        # –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫–µ
                        sheep_keyboard = [[InlineKeyboardButton(f'‚è± {user_info[4][:1]} —á. {user_info[4][2:4]} –º.',
                                                                callback_data='need_cut')],
                                          [InlineKeyboardButton('üéí', callback_data='need_bag'),
                                           InlineKeyboardButton("üå±", callback_data='need_food')],
                                          [InlineKeyboardButton('üë®‚Äçüåæ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏', callback_data='need_info')]]

                        markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

                        await context.bot.edit_message_reply_markup(chat_id=user_id,
                                                                    message_id=context.user_data['message_id'],
                                                                    reply_markup=markup)
                        await bot.answer_callback_query(query.id, '‚è± –ù—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å')
                else:
                    user_info = db_check(query.message.from_user.id)
                    sheep_keyboard = [[InlineKeyboardButton(f'‚úÇ {user_info[4]}', callback_data='need_cut')],
                                      [InlineKeyboardButton('üéí', callback_data='need_bag'),
                                       InlineKeyboardButton("üå±", callback_data='need_food')],
                                      [InlineKeyboardButton('üë®‚Äçüåæ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏', callback_data='need_info')]]

                    markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

                    await context.bot.edit_message_text(chat_id=user_id, message_id=context.user_data['message_id'],
                                                        text=f'üêë {user_info[0]} —É—Ä–æ–≤–µ–Ω—å \n'
                                                             f'üíµ {user_info[1]} üíé {user_info[2]} \n'
                                                             f'üçΩ {user_info[3]} % —Å—ã—Ç–æ—Å—Ç–∏')
                    await context.bot.edit_message_reply_markup(chat_id=user_id,
                                                                message_id=context.user_data['message_id'],
                                                                reply_markup=markup)

        elif query.data == 'need_bag':
            bag_info = db_check_bag(query.message.chat_id)  # –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

            sheep_keyboard = [[InlineKeyboardButton(f'‚Ü© –ù–∞–∑–∞–¥', callback_data='back')]]  # –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

            await context.bot.edit_message_text(chat_id=user_id, message_id=context.user_data['message_id'],
                                                text=f'–†—é–∫–∑–∞–∫ \n'
                                                     f'------------------- \n'
                                                     f'üß∂–®–µ—Ä—Å—Ç—å: {bag_info[0]}')
            await context.bot.edit_message_reply_markup(chat_id=user_id, message_id=context.user_data['message_id'],
                                                        reply_markup=markup)

        elif query.data == 'need_food':
            user_info = db_check(query.message.chat_id)  # –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

            sheep_keyboard = [[InlineKeyboardButton(f'‚Ü© –ù–∞–∑–∞–¥', callback_data='back')]]  # –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏

            markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

            await context.bot.edit_message_text(chat_id=user_id, message_id=context.user_data['message_id'],
                                                text=f'–ï–¥–∞ \n'
                                                     f'------------------- \n')
            await context.bot.edit_message_reply_markup(chat_id=user_id,
                                                        message_id=context.user_data['message_id'],
                                                        reply_markup=markup)

        elif query.data == 'need_info':
            user_info = db_check(query.message.chat_id)  # –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

            sheep_keyboard = [[InlineKeyboardButton(f'‚Ü© –ù–∞–∑–∞–¥', callback_data='back')]]  # –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏

            markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

            await context.bot.edit_message_text(chat_id=user_id, message_id=context.user_data['message_id'],
                                                text=f'–ü–∞—Å–ø–æ—Ä—Ç \n'
                                                     f'------------------- \n'
                                                     f'üë®‚Äçüåæ–ò–º—è: {user_info[6]} \n'
                                                     f'‚≠ê–ü—Ä–æ–≥—Ä–µ—Å—Å: –ø—É–ø—É–ø—É \n'
                                                     f'‚è±–¢–∞–π–º: {user_info[7]} \n'
                                                     f'‚ö°–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {user_info[9]} \n')
            await context.bot.edit_message_reply_markup(chat_id=user_id,
                                                        message_id=context.user_data['message_id'],
                                                        reply_markup=markup)

    elif query.data == 'back':
        user_info = db_check(query.message.chat_id)

        if not user_info[10]:  # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
            delta_time(update)
            sheep_keyboard = [[InlineKeyboardButton(f'‚è± {user_info[4][:1]} —á. {user_info[4][2:4]} –º.',
                                                    callback_data='need_cut')],
                              [InlineKeyboardButton('üéí', callback_data='need_bag'),
                               InlineKeyboardButton("üå±", callback_data='need_food')],
                              [InlineKeyboardButton('üë®‚Äçüåæ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏', callback_data='need_info')]]
        else:
            sheep_keyboard = [[InlineKeyboardButton(f'‚úÇ {user_info[4]}', callback_data='need_cut')],
                              [InlineKeyboardButton('üéí', callback_data='need_bag'),
                               InlineKeyboardButton("üå±", callback_data='need_food')],
                              [InlineKeyboardButton('üë®‚Äçüåæ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏', callback_data='need_info')]]

        markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

        await context.bot.edit_message_text(chat_id=user_id, message_id=context.user_data['message_id'],
                                            text=f'üêë {user_info[0]} —É—Ä–æ–≤–µ–Ω—å \n'
                                                 f'üíµ {user_info[1]} üíé {user_info[2]} \n'
                                                 f'üçΩ {user_info[3]} % —Å—ã—Ç–æ—Å—Ç–∏')
        await context.bot.edit_message_reply_markup(chat_id=user_id,
                                                    message_id=context.user_data['message_id'],
                                                    reply_markup=markup)

    elif 'trade' in query.data:
        if query.data == 'trade_wool-money':
            cursor.execute('UPDATE items SET wool = wool - 1 WHERE user_id = ?', (query.message.chat_id,))
            cursor.execute('UPDATE users SET money = money + 35 WHERE user_id = ?', (query.message.chat_id,))
            conn.commit()

            await bot.answer_callback_query(query.id, '–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞')


async def my_sheep(update, context):
    user_info = db_check(update.message.chat_id)

    if not user_info[10]:  # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        delta_time_for_sheep(update)
        sheep_keyboard = [[InlineKeyboardButton(f'‚è± {user_info[4][:1]} —á. {user_info[4][2:4]} –º.',
                                                callback_data='need_cut')],
                          [InlineKeyboardButton('üéí', callback_data='need_bag'),
                           InlineKeyboardButton("üå±", callback_data='need_food')],
                          [InlineKeyboardButton('üë®‚Äçüåæ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏', callback_data='need_info')]]
    else:
        sheep_keyboard = [[InlineKeyboardButton(f'‚úÇ {user_info[4]}', callback_data='need_cut')],
                          [InlineKeyboardButton('üéí', callback_data='need_bag'),
                           InlineKeyboardButton("üå±", callback_data='need_food')],
                          [InlineKeyboardButton('üë®‚Äçüåæ –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏', callback_data='need_info')]]

    markup = InlineKeyboardMarkup(sheep_keyboard)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

    await bot.send_sticker(update.message.chat_id,
                           'CAACAgIAAxkBAANfZDctaXmyF4wxVTvQnUqzOmIHhJQAAl4AA-SgzgddUrisymDHZC8E')
    await update.message.reply_text(f'üêë {user_info[0]} —É—Ä–æ–≤–µ–Ω—å \n'
                                    f'üíµ {user_info[1]} üíé {user_info[2]} \n'
                                    f'üçΩ {user_info[3]} % —Å—ã—Ç–æ—Å—Ç–∏', reply_markup=markup)


async def walk(update, context):
    cursor.execute('UPDATE users SET walk = False WHERE user_id = ?', (update.message.chat_id,))
    conn.commit()
    await update.message.reply_text('üèî –û–≤–µ—á–∫–∞ —É—à–ª–∞ —Å–∫–∞–∫–∞—Ç—å –ø–æ –≥–æ—Ä–∞–º')


async def trade(update, context):
    user_info = db_check(update.message.chat_id)

    # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    trade_keyboard = [[InlineKeyboardButton('1 üß∂ üîÅ 35 üíµ', callback_data='trade_wool-money')]]
    # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
    markup = InlineKeyboardMarkup(trade_keyboard)

    await update.message.reply_text(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±–º–µ–Ω', reply_markup=markup)
